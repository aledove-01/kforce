@model IEnumerable<Car>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>Cars List</title>
</head>
<body>
    
    <div class="container">
        <h1>Guess Car Price</h1>
        <div id="selectedCar"></div>

        <form method="get" action="/car/checkprice" class="form-inline">
            <div class="form-group mx-sm-3 mb-2">
                <label for="price" class="sr-only">Enter price and guess the price of this car:</label>
                <input type="text" id="price" name="price" autofocus maxlength="15" class="form-control mb-2" />
                <button type="submit" class="btn btn-primary mb-2">Check Price</button>
            </div>
           
        </form>

        <div id="message" style="display: none;"></div>



        <table class="table table-hover">
            <thead>
                <tr>
                    <th scope="col">Id</th>
                    <th scope="col">Make</th>
                    <th scope="col">Model</th>
                    <th scope="col">Year</th>
                    <th scope="col">Doors</th>
                    <th scope="col">Color</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var car in Model)
                {
                    <tr onclick="clickRow(@car.Id)">
                        <td>@car.Id</td>
                        <td>@car.Make</td>
                        <td>@car.Model</td>
                        <td>@car.Year</td>
                        <td>@car.Doors</td>
                        <td>@car.Color</td>
                    </tr>
                }
            </tbody>
        </table>

    </div>

    <hr />



    <script>
        const Cars = @Json.Serialize(Model);
        var SelectedCar = Cars[0];
        clickRow(Cars[0].id);

        document.querySelector('form').addEventListener('submit', async (event) => {
            event.preventDefault();

            const price = document.getElementById('price').value;

            const priceRegex = /^\d+$/;
            if (!priceRegex.test(price)) {
                showMessage('Price must be a positive number.', 'alert alert-danger');
                return;
            }

            fetch(`/car/checkprice?id=${SelectedCar.id}&price=${price}&priceEstimated=5000`)
                .then(response => response.json())
                .then(data => {
                    let message = '';
                    if (data.car != '') {
                        message = `Great job, price is OK! The car price is ${data.car.price}.`;
                        showMessage(message, 'alert alert-success');
                    } else {
                        message = 'Price is not OK!';
                        showMessage(message, 'alert alert-danger');
                    }
                })
                .catch(error => {
                    console.error(error);
                });
        });

        function clickRow(id) {
            
            SelectedCar = Cars.find(c => c.id === id);
            console.log(id, SelectedCar);
            const selectedDiv = document.getElementById('selectedCar');
            selectedDiv.textContent = 'Gess price for: ' + SelectedCar.make + ' ' + SelectedCar.model + ' ' + SelectedCar.year ;
            //messageDiv.style.backgroundColor = color;
            //messageDiv.style.display = 'block';
            selectedDiv.classList = 'alert alert-primary';
        }
        function showMessage(message, styleMessage) {
            const messageDiv = document.getElementById('message');
            messageDiv.textContent = message;
            //messageDiv.style.backgroundColor = color;
            messageDiv.style.display = 'block';
            messageDiv.classList = styleMessage;
            setTimeout(() => {
                messageDiv.style.display = 'none';
            }, 5000);
        }
    </script>
</body>
</html>



